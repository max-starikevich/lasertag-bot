import dedent from 'dedent-js'
import { shuffle } from 'lodash'

import { MIN_TEAM_SIZE_FOR_BALANCING } from '../constants'
import { Command, CommandHandler } from '../types'

const handler: CommandHandler = async (ctx) => {
  const { game, logger } = ctx

  await game.refreshData({ logger })

  const [redPlayers, bluePlayers, levelDifference] = await game.getTeams()

  if (redPlayers.length < MIN_TEAM_SIZE_FOR_BALANCING || bluePlayers.length < MIN_TEAM_SIZE_FOR_BALANCING) {
    return await ctx.replyWithHTML(`ü§∑ –í –∑–∞–ø–∏—Å–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º ${MIN_TEAM_SIZE_FOR_BALANCING}x${MIN_TEAM_SIZE_FOR_BALANCING}`)
  }

  const placeAndTime = await game.getPlaceAndTime()

  const teams = dedent`
    üìÖ <b>${placeAndTime}</b>

    üî¥ ${redPlayers.length} vs. ${bluePlayers.length} üîµ

    ${shuffle(redPlayers)
      .map((player) => `üî¥ ${player.name}`)
      .join('\n')}

    ${shuffle(bluePlayers)
      .map((player) => `üîµ ${player.name}`)
      .join('\n')}
  `

  const balance = levelDifference > 1 || levelDifference < -1
    ? `\n\n ‚ö†Ô∏è –ü–µ—Ä–µ–≤–µ—Å –≤ —Å—Ç–æ—Ä–æ–Ω—É ${levelDifference > 0 ? '–∫—Ä–∞—Å–Ω—ã—Ö' : '—Å–∏–Ω–∏—Ö'}: ${Math.abs(levelDifference)}`
    : '\n\n üëå –ü–æ–ª–Ω—ã–π –±–∞–ª–∞–Ω—Å'

  return await ctx.replyWithHTML(teams + balance)
}

export const teams: Command = {
  name: 'teams',
  handler,
  description: '–ü–æ–¥–µ–ª–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã',
  showInMenu: true
}
